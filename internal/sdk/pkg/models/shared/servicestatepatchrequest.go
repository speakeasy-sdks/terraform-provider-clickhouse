// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ServiceStatePatchRequestCommand - Command to change the state: 'start', 'stop'.
type ServiceStatePatchRequestCommand string

const (
	ServiceStatePatchRequestCommandStart ServiceStatePatchRequestCommand = "start"
	ServiceStatePatchRequestCommandStop  ServiceStatePatchRequestCommand = "stop"
)

func (e ServiceStatePatchRequestCommand) ToPointer() *ServiceStatePatchRequestCommand {
	return &e
}

func (e *ServiceStatePatchRequestCommand) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "start":
		fallthrough
	case "stop":
		*e = ServiceStatePatchRequestCommand(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ServiceStatePatchRequestCommand: %v", v)
	}
}

type ServiceStatePatchRequest struct {
	// Command to change the state: 'start', 'stop'.
	Command *ServiceStatePatchRequestCommand `json:"command,omitempty"`
}
