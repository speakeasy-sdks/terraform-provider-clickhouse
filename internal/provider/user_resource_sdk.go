// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"clickhouse/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *UserResourceModel) ToCreateSDKType() *shared.InvitationPostRequest {
	email := r.Email.ValueString()
	role := shared.InvitationPostRequestRole(r.Role.ValueString())
	out := shared.InvitationPostRequest{
		Email: email,
		Role:  role,
	}
	return &out
}

func (r *UserResourceModel) ToGetSDKType() *shared.InvitationPostRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *UserResourceModel) ToUpdateSDKType() *shared.MemberPatchRequest {
	role := new(shared.MemberPatchRequestRole)
	if !r.Role.IsUnknown() && !r.Role.IsNull() {
		*role = shared.MemberPatchRequestRole(r.Role.ValueString())
	} else {
		role = nil
	}
	out := shared.MemberPatchRequest{
		Role: role,
	}
	return &out
}

func (r *UserResourceModel) ToDeleteSDKType() *shared.InvitationPostRequest {
	out := r.ToCreateSDKType()
	return out
}

func (r *UserResourceModel) RefreshFromGetResponse(resp *shared.Member) {
	if resp.Email != nil {
		r.Email = types.StringValue(*resp.Email)
	} else {
		r.Email = types.StringNull()
	}
	if resp.JoinedAt != nil {
		r.JoinedAt = types.StringValue(resp.JoinedAt.Format(time.RFC3339))
	} else {
		r.JoinedAt = types.StringNull()
	}
	if resp.Name != nil {
		r.Name = types.StringValue(*resp.Name)
	} else {
		r.Name = types.StringNull()
	}
	if resp.Role != nil {
		r.Role = types.StringValue(string(*resp.Role))
	} else {
		r.Role = types.StringNull()
	}
	if resp.UserID != nil {
		r.UserID = types.StringValue(*resp.UserID)
	} else {
		r.UserID = types.StringNull()
	}
}

func (r *UserResourceModel) RefreshFromUpdateResponse(resp *shared.Member) {
	r.RefreshFromGetResponse(resp)
}
